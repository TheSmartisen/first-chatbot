name: Chatbot CI/CD

on:
  push:
    branches:
      - main  # Ex√©cute le workflow √† chaque push sur main
  pull_request:
    branches:
      - main  # Ex√©cute aussi lors des pull requests

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Cloner le d√©p√¥t
        uses: actions/checkout@v4

      - name: üêç Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Installer les d√©pendances
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: üîë Ajouter le Token Hugging Face aux variables d'environnement
        run: |
          echo "TOKEN_KEY=${{ secrets.HF_TOKEN_KEY }}" >> $GITHUB_ENV
        shell: bash  # Force l'utilisation de bash pour l'environnement

      - name: üîç V√©rifier que le Token Hugging Face est bien charg√©
        run: |
          echo "V√©rification du Token Hugging Face..."
          echo "TOKEN_KEY=${TOKEN_KEY:0:6}********"  # Masque la majorit√© du token

      - name: üîç V√©rifier que le mod√®le Hugging Face est accessible
        run: |
          source .venv/bin/activate
          python -c "from transformers import pipeline; print(pipeline('text-generation', model='microsoft/DialoGPT-medium', token='${TOKEN_KEY}'))"

      - name: ‚úÖ Lancer les tests unitaires
        run: |
          source .venv/bin/activate
          export TOKEN_KEY=${TOKEN_KEY}  # üî• Ajout manuel du token pour pytest
          pytest tests/ --maxfail=1 --disable-warnings -q || exit 1

      - name: üöÄ Lancer l'application en arri√®re-plan
        run: |
          source .venv/bin/activate
          nohup python app.py > app.log 2>&1 &  # Rediriger les logs pour √©viter les blocages
          sleep 10  # Attendre que l'app d√©marre